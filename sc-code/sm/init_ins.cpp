#include "BASE.h"
void BASE::INIT_INS(int warp_id)
{
    WARPS[warp_id].ireg[0] = I_TYPE(addi_, 1, 0, 1140);
    WARPS[warp_id].ireg[1] = I_TYPE(add_, 1, 1, 1);
    WARPS[warp_id].ireg[2] = I_TYPE(add_, 1, 1, 1);
    WARPS[warp_id].ireg[3] = I_TYPE(addi_, 2, 0, 1219);
    WARPS[warp_id].ireg[4] = I_TYPE(add_, 2, 2, 2);
    WARPS[warp_id].ireg[5] = I_TYPE(add_, 2, 2, 2);
    WARPS[warp_id].ireg[6] = I_TYPE(addi_, 3, 0, 1157);
    WARPS[warp_id].ireg[7] = I_TYPE(add_, 3, 3, 3);
    WARPS[warp_id].ireg[8] = I_TYPE(add_, 3, 3, 3);
    WARPS[warp_id].ireg[9] = I_TYPE(addi_, 4, 0, 1223);
    WARPS[warp_id].ireg[10] = I_TYPE(add_, 4, 4, 4);
    WARPS[warp_id].ireg[11] = I_TYPE(add_, 4, 4, 4);
    WARPS[warp_id].ireg[12] = I_TYPE(addi_, 5, 0, 1148);
    WARPS[warp_id].ireg[13] = I_TYPE(add_, 5, 5, 5);
    WARPS[warp_id].ireg[14] = I_TYPE(add_, 5, 5, 5);
    WARPS[warp_id].ireg[15] = I_TYPE(addi_, 6, 0, 1205);
    WARPS[warp_id].ireg[16] = I_TYPE(add_, 6, 6, 6);
    WARPS[warp_id].ireg[17] = I_TYPE(add_, 6, 6, 6);
    WARPS[warp_id].ireg[18] = I_TYPE(addi_, 7, 0, 1220);
    WARPS[warp_id].ireg[19] = I_TYPE(add_, 7, 7, 7);
    WARPS[warp_id].ireg[20] = I_TYPE(add_, 7, 7, 7);
    WARPS[warp_id].ireg[21] = I_TYPE(addi_, 8, 0, 1145);
    WARPS[warp_id].ireg[22] = I_TYPE(add_, 8, 8, 8);
    WARPS[warp_id].ireg[23] = I_TYPE(add_, 8, 8, 8);
    WARPS[warp_id].ireg[24] = I_TYPE(addi_, 9, 0, 1133);
    WARPS[warp_id].ireg[25] = I_TYPE(add_, 9, 9, 9);
    WARPS[warp_id].ireg[26] = I_TYPE(add_, 9, 9, 9);
    WARPS[warp_id].ireg[27] = I_TYPE(addi_, 10, 0, 1205);
    WARPS[warp_id].ireg[28] = I_TYPE(add_, 10, 10, 10);
    WARPS[warp_id].ireg[29] = I_TYPE(add_, 10, 10, 10);
    WARPS[warp_id].ireg[30] = I_TYPE(addi_, 11, 0, 1144);
    WARPS[warp_id].ireg[31] = I_TYPE(add_, 11, 11, 11);
    WARPS[warp_id].ireg[32] = I_TYPE(add_, 11, 11, 11);
    WARPS[warp_id].ireg[33] = I_TYPE(addi_, 12, 0, 1190);
    WARPS[warp_id].ireg[34] = I_TYPE(add_, 12, 12, 12);
    WARPS[warp_id].ireg[35] = I_TYPE(add_, 12, 12, 12);
    WARPS[warp_id].ireg[36] = I_TYPE(addi_, 13, 0, 1195);
    WARPS[warp_id].ireg[37] = I_TYPE(add_, 13, 13, 13);
    WARPS[warp_id].ireg[38] = I_TYPE(add_, 13, 13, 13);
    WARPS[warp_id].ireg[39] = I_TYPE(addi_, 14, 0, 1151);
    WARPS[warp_id].ireg[40] = I_TYPE(add_, 14, 14, 14);
    WARPS[warp_id].ireg[41] = I_TYPE(add_, 14, 14, 14);
    WARPS[warp_id].ireg[42] = I_TYPE(addi_, 15, 0, 1210);
    WARPS[warp_id].ireg[43] = I_TYPE(add_, 15, 15, 15);
    WARPS[warp_id].ireg[44] = I_TYPE(add_, 15, 15, 15);
    WARPS[warp_id].ireg[45] = I_TYPE(addi_, 16, 0, 1203);
    WARPS[warp_id].ireg[46] = I_TYPE(add_, 16, 16, 16);
    WARPS[warp_id].ireg[47] = I_TYPE(add_, 16, 16, 16);
    WARPS[warp_id].ireg[48] = I_TYPE(addi_, 17, 0, 1169);
    WARPS[warp_id].ireg[49] = I_TYPE(add_, 17, 17, 17);
    WARPS[warp_id].ireg[50] = I_TYPE(add_, 17, 17, 17);
    WARPS[warp_id].ireg[51] = I_TYPE(addi_, 18, 0, 1173);
    WARPS[warp_id].ireg[52] = I_TYPE(add_, 18, 18, 18);
    WARPS[warp_id].ireg[53] = I_TYPE(add_, 18, 18, 18);
    WARPS[warp_id].ireg[54] = I_TYPE(addi_, 19, 0, 1184);
    WARPS[warp_id].ireg[55] = I_TYPE(add_, 19, 19, 19);
    WARPS[warp_id].ireg[56] = I_TYPE(add_, 19, 19, 19);
    WARPS[warp_id].ireg[57] = I_TYPE(addi_, 20, 0, 1132);
    WARPS[warp_id].ireg[58] = I_TYPE(add_, 20, 20, 20);
    WARPS[warp_id].ireg[59] = I_TYPE(add_, 20, 20, 20);
    WARPS[warp_id].ireg[60] = I_TYPE(addi_, 21, 0, 1185);
    WARPS[warp_id].ireg[61] = I_TYPE(add_, 21, 21, 21);
    WARPS[warp_id].ireg[62] = I_TYPE(add_, 21, 21, 21);
    WARPS[warp_id].ireg[63] = I_TYPE(addi_, 22, 0, 1224);
    WARPS[warp_id].ireg[64] = I_TYPE(add_, 22, 22, 22);
    WARPS[warp_id].ireg[65] = I_TYPE(add_, 22, 22, 22);
    WARPS[warp_id].ireg[66] = I_TYPE(addi_, 23, 0, 1130);
    WARPS[warp_id].ireg[67] = I_TYPE(add_, 23, 23, 23);
    WARPS[warp_id].ireg[68] = I_TYPE(add_, 23, 23, 23);
    WARPS[warp_id].ireg[69] = I_TYPE(addi_, 24, 0, 1219);
    WARPS[warp_id].ireg[70] = I_TYPE(add_, 24, 24, 24);
    WARPS[warp_id].ireg[71] = I_TYPE(add_, 24, 24, 24);
    WARPS[warp_id].ireg[72] = I_TYPE(addi_, 25, 0, 1134);
    WARPS[warp_id].ireg[73] = I_TYPE(add_, 25, 25, 25);
    WARPS[warp_id].ireg[74] = I_TYPE(add_, 25, 25, 25);
    WARPS[warp_id].ireg[75] = I_TYPE(addi_, 26, 0, 1168);
    WARPS[warp_id].ireg[76] = I_TYPE(add_, 26, 26, 26);
    WARPS[warp_id].ireg[77] = I_TYPE(add_, 26, 26, 26);
    WARPS[warp_id].ireg[78] = I_TYPE(addi_, 27, 0, 1153);
    WARPS[warp_id].ireg[79] = I_TYPE(add_, 27, 27, 27);
    WARPS[warp_id].ireg[80] = I_TYPE(add_, 27, 27, 27);
    WARPS[warp_id].ireg[81] = I_TYPE(addi_, 28, 0, 1189);
    WARPS[warp_id].ireg[82] = I_TYPE(add_, 28, 28, 28);
    WARPS[warp_id].ireg[83] = I_TYPE(add_, 28, 28, 28);
    WARPS[warp_id].ireg[84] = I_TYPE(addi_, 29, 0, 1210);
    WARPS[warp_id].ireg[85] = I_TYPE(add_, 29, 29, 29);
    WARPS[warp_id].ireg[86] = I_TYPE(add_, 29, 29, 29);
    WARPS[warp_id].ireg[87] = I_TYPE(addi_, 30, 0, 1160);
    WARPS[warp_id].ireg[88] = I_TYPE(add_, 30, 30, 30);
    WARPS[warp_id].ireg[89] = I_TYPE(add_, 30, 30, 30);
    WARPS[warp_id].ireg[90] = I_TYPE(addi_, 31, 0, 1166);
    WARPS[warp_id].ireg[91] = I_TYPE(add_, 31, 31, 31);
    WARPS[warp_id].ireg[92] = I_TYPE(add_, 31, 31, 31);
    WARPS[warp_id].ireg[93] = I_TYPE(vaddvx_, 0, 31, 0);
    WARPS[warp_id].ireg[94] = I_TYPE(vaddvx_, 1, 31, 1);
    WARPS[warp_id].ireg[95] = I_TYPE(vaddvx_, 2, 31, 2);
    WARPS[warp_id].ireg[96] = I_TYPE(vaddvx_, 3, 31, 3);
    WARPS[warp_id].ireg[97] = I_TYPE(vaddvx_, 4, 31, 4);
    WARPS[warp_id].ireg[98] = I_TYPE(vaddvx_, 5, 31, 5);
    WARPS[warp_id].ireg[99] = I_TYPE(vaddvx_, 6, 31, 6);
    WARPS[warp_id].ireg[100] = I_TYPE(vaddvx_, 7, 31, 7);
    WARPS[warp_id].ireg[101] = I_TYPE(vaddvx_, 8, 31, 8);
    WARPS[warp_id].ireg[102] = I_TYPE(vaddvx_, 9, 31, 9);
    WARPS[warp_id].ireg[103] = I_TYPE(vaddvx_, 10, 31, 10);
    WARPS[warp_id].ireg[104] = I_TYPE(vaddvx_, 11, 31, 11);
    WARPS[warp_id].ireg[105] = I_TYPE(vaddvx_, 12, 31, 12);
    WARPS[warp_id].ireg[106] = I_TYPE(vaddvx_, 13, 31, 13);
    WARPS[warp_id].ireg[107] = I_TYPE(vaddvx_, 14, 31, 14);
    WARPS[warp_id].ireg[108] = I_TYPE(vaddvx_, 15, 31, 15);
    WARPS[warp_id].ireg[109] = I_TYPE(vaddvx_, 16, 31, 16);
    WARPS[warp_id].ireg[110] = I_TYPE(vaddvx_, 17, 31, 17);
    WARPS[warp_id].ireg[111] = I_TYPE(vaddvx_, 18, 31, 18);
    WARPS[warp_id].ireg[112] = I_TYPE(vaddvx_, 19, 31, 19);
    WARPS[warp_id].ireg[113] = I_TYPE(vaddvx_, 20, 31, 20);
    WARPS[warp_id].ireg[114] = I_TYPE(vaddvx_, 21, 31, 21);
    WARPS[warp_id].ireg[115] = I_TYPE(vaddvx_, 22, 31, 22);
    WARPS[warp_id].ireg[116] = I_TYPE(vaddvx_, 23, 31, 23);
    WARPS[warp_id].ireg[117] = I_TYPE(vaddvx_, 24, 31, 24);
    WARPS[warp_id].ireg[118] = I_TYPE(vaddvx_, 25, 31, 25);
    WARPS[warp_id].ireg[119] = I_TYPE(vaddvx_, 26, 31, 26);
    WARPS[warp_id].ireg[120] = I_TYPE(vaddvx_, 27, 31, 27);
    WARPS[warp_id].ireg[121] = I_TYPE(vaddvx_, 28, 31, 28);
    WARPS[warp_id].ireg[122] = I_TYPE(vaddvx_, 29, 31, 29);
    WARPS[warp_id].ireg[123] = I_TYPE(vaddvx_, 30, 31, 30);
    WARPS[warp_id].ireg[124] = I_TYPE(vaddvx_, 31, 31, 31);
    WARPS[warp_id].ireg[125] = I_TYPE(add_, 23, 29, 8);
    WARPS[warp_id].ireg[126] = I_TYPE(vaddvx_, 8, 16, 16);
    WARPS[warp_id].ireg[127] = I_TYPE(vaddvv_, 19, 22, 30);
    WARPS[warp_id].ireg[128] = I_TYPE(vle32v_, 20, 27, -1);
    WARPS[warp_id].ireg[129] = I_TYPE(lw_, 14, 29, 20);
    WARPS[warp_id].ireg[130] = I_TYPE(vle32v_, 20, 20, -1);
    WARPS[warp_id].ireg[131] = I_TYPE(vfaddvv_, 6, 7, 27);
    WARPS[warp_id].ireg[132] = I_TYPE(add_, 7, 30, 22);
    WARPS[warp_id].ireg[133] = I_TYPE(addi_, 4, 25, 4);
    WARPS[warp_id].ireg[134] = I_TYPE(vfaddvv_, 8, 10, 18);
    WARPS[warp_id].ireg[135] = I_TYPE(vfaddvv_, 27, 11, 25);
    WARPS[warp_id].ireg[136] = I_TYPE(add_, 3, 10, 26);
    WARPS[warp_id].ireg[137] = I_TYPE(beq_, 0, 22, 14);
    WARPS[warp_id].ireg[138] = I_TYPE(lw_, 25, 5, 16);
    WARPS[warp_id].ireg[139] = I_TYPE(lw_, 12, 2, 4);
    WARPS[warp_id].ireg[140] = I_TYPE(vaddvv_, 23, 11, 27);
    WARPS[warp_id].ireg[141] = I_TYPE(vaddvv_, 22, 23, 3);
    WARPS[warp_id].ireg[142] = I_TYPE(vaddvx_, 24, 25, 23);
    WARPS[warp_id].ireg[143] = I_TYPE(addi_, 19, 9, -4);
    WARPS[warp_id].ireg[144] = I_TYPE(addi_, 8, 3, -4);
    WARPS[warp_id].ireg[145] = I_TYPE(vle32v_, 15, 23, -1);
    WARPS[warp_id].ireg[146] = I_TYPE(vle32v_, 16, 23, -1);
    WARPS[warp_id].ireg[147] = I_TYPE(vaddvx_, 19, 19, 1);
    WARPS[warp_id].ireg[148] = I_TYPE(vfaddvv_, 3, 1, 11);
    WARPS[warp_id].ireg[149] = I_TYPE(vfaddvv_, 5, 9, 5);
    WARPS[warp_id].ireg[150] = I_TYPE(add_, 19, 7, 4);
    WARPS[warp_id].ireg[151] = I_TYPE(vaddvx_, 11, 28, 11);
    WARPS[warp_id].ireg[152] = I_TYPE(add_, 10, 25, 1);
    WARPS[warp_id].ireg[153] = I_TYPE(vaddvv_, 14, 11, 21);
    WARPS[warp_id].ireg[154] = I_TYPE(vfaddvv_, 2, 10, 23);
    WARPS[warp_id].ireg[155] = I_TYPE(vle32v_, 30, 12, -1);
    WARPS[warp_id].ireg[156] = I_TYPE(vaddvv_, 6, 9, 16);
    WARPS[warp_id].ireg[157] = I_TYPE(vfaddvv_, 10, 13, 4);
    WARPS[warp_id].ireg[158] = I_TYPE(vfaddvv_, 4, 7, 25);
    WARPS[warp_id].ireg[159] = I_TYPE(lw_, 27, 4, 28);
    WARPS[warp_id].ireg[160] = I_TYPE(vfaddvv_, 7, 4, 23);
    WARPS[warp_id].ireg[161] = I_TYPE(addi_, 15, 29, 4);
    WARPS[warp_id].ireg[162] = I_TYPE(vaddvv_, 13, 17, 29);
    WARPS[warp_id].ireg[163] = I_TYPE(lw_, 20, 19, 4);
    WARPS[warp_id].ireg[164] = I_TYPE(vfaddvv_, 4, 20, 11);
    WARPS[warp_id].ireg[165] = I_TYPE(vaddvv_, 11, 30, 25);
    WARPS[warp_id].ireg[166] = I_TYPE(beq_, 0, 2, 30);
    WARPS[warp_id].ireg[167] = I_TYPE(add_, 16, 22, 25);
    WARPS[warp_id].ireg[168] = I_TYPE(add_, 12, 8, 20);
    WARPS[warp_id].ireg[169] = I_TYPE(vfaddvv_, 18, 16, 26);
    WARPS[warp_id].ireg[170] = I_TYPE(vfaddvv_, 22, 5, 7);
    WARPS[warp_id].ireg[171] = I_TYPE(addi_, 9, 22, -4);
    WARPS[warp_id].ireg[172] = I_TYPE(vfaddvv_, 29, 9, 15);
    WARPS[warp_id].ireg[173] = I_TYPE(beq_, 0, 9, 14);
    WARPS[warp_id].ireg[174] = I_TYPE(vaddvx_, 14, 15, 10);
    WARPS[warp_id].ireg[175] = I_TYPE(vle32v_, 16, 16, -1);
    WARPS[warp_id].ireg[176] = I_TYPE(vaddvx_, 5, 22, 21);
    WARPS[warp_id].ireg[177] = I_TYPE(beq_, 0, 27, 26);
    WARPS[warp_id].ireg[178] = I_TYPE(beq_, 0, 3, 17);
    WARPS[warp_id].ireg[179] = I_TYPE(vaddvx_, 18, 26, 25);
    WARPS[warp_id].ireg[180] = I_TYPE(vle32v_, 26, 2, -1);
    WARPS[warp_id].ireg[181] = I_TYPE(add_, 28, 16, 25);
    WARPS[warp_id].ireg[182] = I_TYPE(addi_, 16, 15, -8);
    WARPS[warp_id].ireg[183] = I_TYPE(beq_, 0, 22, 23);
    WARPS[warp_id].ireg[184] = I_TYPE(vle32v_, 16, 12, -1);
    WARPS[warp_id].ireg[185] = I_TYPE(add_, 11, 3, 3);
    WARPS[warp_id].ireg[186] = I_TYPE(vaddvv_, 5, 1, 7);
    WARPS[warp_id].ireg[187] = I_TYPE(vaddvv_, 2, 19, 1);
    WARPS[warp_id].ireg[188] = I_TYPE(beq_, 0, 6, 5);
    WARPS[warp_id].ireg[189] = I_TYPE(vle32v_, 7, 20, -1);
    WARPS[warp_id].ireg[190] = I_TYPE(lw_, 12, 27, 0);
    WARPS[warp_id].ireg[191] = I_TYPE(lw_, 7, 28, -16);
    WARPS[warp_id].ireg[192] = I_TYPE(add_, 27, 26, 7);
    WARPS[warp_id].ireg[193] = I_TYPE(add_, 8, 9, 27);
    WARPS[warp_id].ireg[194] = I_TYPE(addi_, 25, 25, -4);
    WARPS[warp_id].ireg[195] = I_TYPE(beq_, 0, 27, 16);
    WARPS[warp_id].ireg[196] = I_TYPE(add_, 3, 1, 4);
    WARPS[warp_id].ireg[197] = I_TYPE(lw_, 3, 17, -8);
    WARPS[warp_id].ireg[198] = I_TYPE(vaddvv_, 26, 6, 29);
    WARPS[warp_id].ireg[199] = I_TYPE(vaddvv_, 23, 14, 15);
    WARPS[warp_id].ireg[200] = I_TYPE(vfaddvv_, 18, 22, 25);
    WARPS[warp_id].ireg[201] = I_TYPE(vle32v_, 9, 29, -1);
    WARPS[warp_id].ireg[202] = I_TYPE(vfaddvv_, 28, 7, 6);
    WARPS[warp_id].ireg[203] = I_TYPE(vfaddvv_, 13, 15, 21);
    WARPS[warp_id].ireg[204] = I_TYPE(lw_, 4, 18, -32);
    WARPS[warp_id].ireg[205] = I_TYPE(vle32v_, 30, 10, -1);
    WARPS[warp_id].ireg[206] = I_TYPE(beq_, 0, 22, 19);
    WARPS[warp_id].ireg[207] = I_TYPE(vle32v_, 2, 12, -1);
    WARPS[warp_id].ireg[208] = I_TYPE(beq_, 0, 21, 22);
    WARPS[warp_id].ireg[209] = I_TYPE(lw_, 22, 22, 32);
    WARPS[warp_id].ireg[210] = I_TYPE(vle32v_, 5, 21, -1);
    WARPS[warp_id].ireg[211] = I_TYPE(addi_, 6, 26, 4);
    WARPS[warp_id].ireg[212] = I_TYPE(addi_, 21, 30, 0);
    WARPS[warp_id].ireg[213] = I_TYPE(lw_, 8, 1, -36);
    WARPS[warp_id].ireg[214] = I_TYPE(vfaddvv_, 26, 5, 9);
    WARPS[warp_id].ireg[215] = I_TYPE(vfaddvv_, 29, 7, 13);
    WARPS[warp_id].ireg[216] = I_TYPE(beq_, 0, 18, 24);
    WARPS[warp_id].ireg[217] = I_TYPE(lw_, 26, 10, 16);
    WARPS[warp_id].ireg[218] = I_TYPE(beq_, 0, 16, 19);
    WARPS[warp_id].ireg[219] = I_TYPE(vfaddvv_, 25, 2, 6);
    WARPS[warp_id].ireg[220] = I_TYPE(vaddvv_, 29, 14, 9);
    WARPS[warp_id].ireg[221] = I_TYPE(lw_, 1, 23, -20);
    WARPS[warp_id].ireg[222] = I_TYPE(vle32v_, 27, 24, -1);
    WARPS[warp_id].ireg[223] = I_TYPE(vfaddvv_, 24, 23, 10);
    WARPS[warp_id].ireg[224] = I_TYPE(add_, 28, 30, 20);
    WARPS[warp_id].ireg[225] = I_TYPE(vaddvv_, 18, 1, 22);
    WARPS[warp_id].ireg[226] = I_TYPE(addi_, 1, 19, -4);
    WARPS[warp_id].ireg[227] = I_TYPE(vaddvx_, 29, 10, 23);
    WARPS[warp_id].ireg[228] = I_TYPE(vaddvv_, 25, 11, 3);
    WARPS[warp_id].ireg[229] = I_TYPE(beq_, 0, 8, 28);
    WARPS[warp_id].ireg[230] = I_TYPE(lw_, 14, 11, 40);
    WARPS[warp_id].ireg[231] = I_TYPE(addi_, 16, 28, 8);
    WARPS[warp_id].ireg[232] = I_TYPE(add_, 7, 10, 18);
    WARPS[warp_id].ireg[233] = I_TYPE(vle32v_, 1, 18, -1);
    WARPS[warp_id].ireg[234] = I_TYPE(vaddvx_, 17, 10, 20);
    WARPS[warp_id].ireg[235] = I_TYPE(vaddvv_, 27, 18, 25);
    WARPS[warp_id].ireg[236] = I_TYPE(add_, 15, 7, 6);
    WARPS[warp_id].ireg[237] = I_TYPE(vaddvv_, 14, 2, 12);
    WARPS[warp_id].ireg[238] = I_TYPE(vaddvx_, 12, 9, 29);
    WARPS[warp_id].ireg[239] = I_TYPE(addi_, 28, 11, -4);
    WARPS[warp_id].ireg[240] = I_TYPE(vfaddvv_, 30, 29, 23);
    WARPS[warp_id].ireg[241] = I_TYPE(beq_, 0, 15, 14);
    WARPS[warp_id].ireg[242] = I_TYPE(vle32v_, 23, 16, -1);
    WARPS[warp_id].ireg[243] = I_TYPE(add_, 22, 8, 17);
    WARPS[warp_id].ireg[244] = I_TYPE(addi_, 14, 24, -4);
    WARPS[warp_id].ireg[245] = I_TYPE(beq_, 0, 24, 8);
    WARPS[warp_id].ireg[246] = I_TYPE(lw_, 27, 1, -32);
    WARPS[warp_id].ireg[247] = I_TYPE(add_, 2, 11, 18);
    WARPS[warp_id].ireg[248] = I_TYPE(vle32v_, 11, 21, -1);
    WARPS[warp_id].ireg[249] = I_TYPE(vfaddvv_, 4, 4, 30);
    WARPS[warp_id].ireg[250] = I_TYPE(vaddvx_, 13, 15, 18);
    WARPS[warp_id].ireg[251] = I_TYPE(lw_, 20, 2, 4);
    WARPS[warp_id].ireg[252] = I_TYPE(vaddvv_, 1, 11, 24);
    WARPS[warp_id].ireg[253] = I_TYPE(lw_, 3, 29, -28);
    WARPS[warp_id].ireg[254] = I_TYPE(addi_, 15, 7, 4);
    WARPS[warp_id].ireg[255] = I_TYPE(vfaddvv_, 19, 25, 1);
    WARPS[warp_id].ireg[256] = I_TYPE(lw_, 30, 1, 16);
    WARPS[warp_id].ireg[257] = I_TYPE(vle32v_, 30, 22, -1);
    WARPS[warp_id].ireg[258] = I_TYPE(add_, 16, 4, 29);
    WARPS[warp_id].ireg[259] = I_TYPE(add_, 18, 19, 17);
    WARPS[warp_id].ireg[260] = I_TYPE(lw_, 25, 12, 24);
    WARPS[warp_id].ireg[261] = I_TYPE(add_, 16, 21, 17);
    WARPS[warp_id].ireg[262] = I_TYPE(beq_, 0, 8, 27);
    WARPS[warp_id].ireg[263] = I_TYPE(beq_, 0, 27, 17);
    WARPS[warp_id].ireg[264] = I_TYPE(addi_, 11, 25, -4);
    WARPS[warp_id].ireg[265] = I_TYPE(vaddvv_, 25, 5, 21);
    WARPS[warp_id].ireg[266] = I_TYPE(vfaddvv_, 10, 25, 21);
    WARPS[warp_id].ireg[267] = I_TYPE(vaddvx_, 13, 12, 18);
    WARPS[warp_id].ireg[268] = I_TYPE(lw_, 27, 17, 4);
    WARPS[warp_id].ireg[269] = I_TYPE(lw_, 22, 29, -24);
    WARPS[warp_id].ireg[270] = I_TYPE(addi_, 8, 17, -8);
    WARPS[warp_id].ireg[271] = I_TYPE(vfaddvv_, 22, 2, 2);
    WARPS[warp_id].ireg[272] = I_TYPE(lw_, 11, 30, -4);
    WARPS[warp_id].ireg[273] = I_TYPE(beq_, 0, 7, 2);
    WARPS[warp_id].ireg[274] = I_TYPE(vle32v_, 28, 2, -1);
    WARPS[warp_id].ireg[275] = I_TYPE(vle32v_, 14, 26, -1);
    WARPS[warp_id].ireg[276] = I_TYPE(vfaddvv_, 28, 18, 14);
    WARPS[warp_id].ireg[277] = I_TYPE(lw_, 7, 24, 16);
    WARPS[warp_id].ireg[278] = I_TYPE(addi_, 14, 26, -4);
    WARPS[warp_id].ireg[279] = I_TYPE(vaddvx_, 8, 9, 25);
    WARPS[warp_id].ireg[280] = I_TYPE(vaddvv_, 15, 10, 8);
    WARPS[warp_id].ireg[281] = I_TYPE(vaddvx_, 30, 26, 28);
    WARPS[warp_id].ireg[282] = I_TYPE(vaddvv_, 29, 4, 4);
    WARPS[warp_id].ireg[283] = I_TYPE(addi_, 12, 22, 4);
    WARPS[warp_id].ireg[284] = I_TYPE(vaddvx_, 12, 19, 6);
    WARPS[warp_id].ireg[285] = I_TYPE(add_, 13, 28, 17);
    WARPS[warp_id].ireg[286] = I_TYPE(vaddvx_, 4, 17, 1);
    WARPS[warp_id].ireg[287] = I_TYPE(addi_, 13, 6, -4);
    WARPS[warp_id].ireg[288] = I_TYPE(beq_, 0, 12, 16);
    WARPS[warp_id].ireg[289] = I_TYPE(vaddvx_, 7, 3, 5);
    WARPS[warp_id].ireg[290] = I_TYPE(vaddvv_, 3, 7, 18);
    WARPS[warp_id].ireg[291] = I_TYPE(vaddvv_, 27, 4, 20);
    WARPS[warp_id].ireg[292] = I_TYPE(vle32v_, 9, 3, -1);
    WARPS[warp_id].ireg[293] = I_TYPE(addi_, 8, 27, -8);
    WARPS[warp_id].ireg[294] = I_TYPE(add_, 7, 9, 9);
    WARPS[warp_id].ireg[295] = I_TYPE(vfaddvv_, 12, 4, 27);
    WARPS[warp_id].ireg[296] = I_TYPE(vle32v_, 11, 17, -1);
    WARPS[warp_id].ireg[297] = I_TYPE(vfaddvv_, 18, 6, 13);
    WARPS[warp_id].ireg[298] = I_TYPE(vfaddvv_, 5, 27, 9);
    WARPS[warp_id].ireg[299] = I_TYPE(lw_, 24, 19, 20);
    WARPS[warp_id].ireg[300] = I_TYPE(add_, 27, 3, 28);
    WARPS[warp_id].ireg[301] = I_TYPE(vaddvv_, 27, 29, 28);
    WARPS[warp_id].ireg[302] = I_TYPE(vle32v_, 21, 24, -1);
    WARPS[warp_id].ireg[303] = I_TYPE(vaddvv_, 2, 9, 24);
    WARPS[warp_id].ireg[304] = I_TYPE(lw_, 29, 26, 16);
    WARPS[warp_id].ireg[305] = I_TYPE(beq_, 0, 5, 7);
    WARPS[warp_id].ireg[306] = I_TYPE(add_, 26, 15, 12);
    WARPS[warp_id].ireg[307] = I_TYPE(addi_, 2, 11, 4);
    WARPS[warp_id].ireg[308] = I_TYPE(add_, 23, 25, 8);
    WARPS[warp_id].ireg[309] = I_TYPE(add_, 1, 10, 19);
    WARPS[warp_id].ireg[310] = I_TYPE(vfaddvv_, 1, 3, 17);
    WARPS[warp_id].ireg[311] = I_TYPE(vaddvx_, 7, 18, 16);
    WARPS[warp_id].ireg[312] = I_TYPE(beq_, 0, 6, 14);
    WARPS[warp_id].ireg[313] = I_TYPE(vfaddvv_, 5, 13, 26);
    WARPS[warp_id].ireg[314] = I_TYPE(beq_, 0, 9, 28);
    WARPS[warp_id].ireg[315] = I_TYPE(add_, 20, 6, 3);
    WARPS[warp_id].ireg[316] = I_TYPE(lw_, 27, 18, 16);
    WARPS[warp_id].ireg[317] = I_TYPE(vaddvv_, 16, 5, 16);
    WARPS[warp_id].ireg[318] = I_TYPE(vle32v_, 2, 5, -1);
    WARPS[warp_id].ireg[319] = I_TYPE(vaddvv_, 9, 13, 23);
    WARPS[warp_id].ireg[320] = I_TYPE(vaddvx_, 3, 11, 2);
    WARPS[warp_id].ireg[321] = I_TYPE(addi_, 27, 18, -8);
    WARPS[warp_id].ireg[322] = I_TYPE(addi_, 1, 14, 4);
    WARPS[warp_id].ireg[323] = I_TYPE(vaddvv_, 27, 7, 21);
    WARPS[warp_id].ireg[324] = I_TYPE(vle32v_, 4, 4, -1);
}
